<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>llurry</title>
  
  <subtitle>菜鸟日记</subtitle>
  <link href="https://llurry.github.io/atom.xml" rel="self"/>
  
  <link href="https://llurry.github.io/"/>
  <updated>2025-07-28T05:52:45.356Z</updated>
  <id>https://llurry.github.io/</id>
  
  <author>
    <name>llurry</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>安卓逆向两道题目的wp</title>
    <link href="https://llurry.github.io/2025/07/28/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E4%B8%A4%E9%81%93%E9%A2%98%E7%9B%AE%E7%9A%84wp/"/>
    <id>https://llurry.github.io/2025/07/28/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E4%B8%A4%E9%81%93%E9%A2%98%E7%9B%AE%E7%9A%84wp/</id>
    <published>2025-07-28T05:52:45.000Z</published>
    <updated>2025-07-28T05:52:45.356Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>JQCTF wp</title>
    <link href="https://llurry.github.io/2025/06/04/JQCTF-wp/"/>
    <id>https://llurry.github.io/2025/06/04/JQCTF-wp/</id>
    <published>2025-06-04T03:43:12.000Z</published>
    <updated>2025-07-07T08:02:26.225Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="#customize-vm">第一题 Writeup</a></li><li><a href="#drillbeam">第二题 Writeup</a></li></ul><h1 id="JQCTF-re复现"><a href="#JQCTF-re复现" class="headerlink" title="JQCTF re复现"></a>JQCTF re复现</h1><h2 id="第一题-writeup-customize-vm"><a href="#第一题-writeup-customize-vm" class="headerlink" title="第一题-writeup-customize-vm"></a>第一题-writeup-customize-vm</h2><p>这个比赛对我来说还是比较难的，re里这道题稍微简单一点，所以先复现了它。</p><p>输入长度50，构造关键逻辑在这里，此处是取输入的字符与一组密文进行异或，func_len中所存的即是每一组密文的长度，而\func_data即是所存储的函数（加密之后的），那么就是一个smc了，input只要能满足正常解密出所有的函数逻辑即可<br><img src="/images/example.png" alt="example.png"></p><p>使用解密出的函数做后面的约束<br><img src="/images/re.png" alt="re.png"><br>然后这里有点卡了，看了别人的wp后才懂了，只要能fuzz出那个满足正常异或出函数逻辑的输入即可，单字节的一个爆破，翻看一下待解密的模块，找到一点小技巧，0异或一个字节是那个字节本身，那么正确的字节是0的话异或目标字节就会是那个字节，就像下面这块，有连续的z出现，那么目标字节大概率就是z。</p><p>输入z之后修一下，成功修复，找一下规律，每个函数最后的retn就是最好的标志<br><img src="/images/ree.jpg" alt="ree.jpg"></p><p>写个脚本fuzz一下，retn对应的字节码是c3,手动替换一下bytes_array。</p><p>脚本</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">bytes_array = [</span><br><span class="line"><span class="number">0x90</span>, <span class="number">0xFB</span>, <span class="number">0xF1</span>, <span class="number">0x17</span>, <span class="number">0x89</span>, <span class="number">0x89</span>, <span class="number">0x89</span>, <span class="number">0xF5</span>, <span class="number">0x86</span>, <span class="number">0x7D</span>,</span><br><span class="line"><span class="number">0xF5</span>, <span class="number">0xB6</span>, <span class="number">0x73</span>, <span class="number">0xB5</span></span><br><span class="line">]</span><br><span class="line">last_byte = bytes_array[-<span class="number">1</span>]</span><br><span class="line">target = <span class="number">0xC3</span></span><br><span class="line">xor_char = last_byte ^ target</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查是否在 0-9, a-z, _ 范围内</span></span><br><span class="line"><span class="keyword">if</span> (<span class="number">48</span> &lt;= xor_char &lt;= <span class="number">57</span>) <span class="keyword">or</span> (<span class="number">97</span> &lt;= xor_char &lt;= <span class="number">122</span>) <span class="keyword">or</span> (xor_char == <span class="number">95</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;找到的异或字符: &#x27;<span class="subst">&#123;<span class="built_in">chr</span>(xor_char)&#125;</span>&#x27;&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;没有找到符合条件的异或字符。&quot;</span>)</span><br></pre></td></tr></table></figure><p>跳转测试<br><a href="#第一题-writeup-customize-vm">第一题</a></p><h2 id="第二题-Writeup-drillbeam"><a href="#第二题-Writeup-drillbeam" class="headerlink" title="第二题 Writeup #drillbeam"></a>第二题 Writeup #drillbeam</h2><p>这道题主要涉及安卓逆向</p>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#customize-vm&quot;&gt;第一题 Writeup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#drillbeam&quot;&gt;第二题 Writeup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;JQCTF-re复现&quot;&gt;&lt;a href=&quot;#JQCT</summary>
      
    
    
    
    <category term="wp" scheme="https://llurry.github.io/categories/wp/"/>
    
    
    <category term="re" scheme="https://llurry.github.io/tags/re/"/>
    
  </entry>
  
</feed>
